#!/usr/bin/perl
use warnings;
use strict;
BEGIN { push @INC, ".", "utils", "perl"; }

#use ArabicTeX;
use ReadTable;

binmode(STDOUT, ":utf8");
binmode(STDERR, ":utf8");
use U qw(pv);

use Getopt::Long;
Getopt::Long::Configure ("bundling", "no_ignore_case");

sub usage {
  warn "Usage: search-cards [-v] [-F|-N] SEARCH_STR TABLE_FILES\n";
  exit shift;
}

my (@tab_files,
    $verbose,
    $help,
    $bad_args,
    $search_str,
    $whole_word,
    $foreign_only,
    $notes_only
    );

GetOptions('-v' => \$verbose,
           '-w' => \$whole_word,
           '-F' => \$foreign_only,
           '-N' => \$notes_only,
           '-h|help' => \$help,
    ) or usage 1;

usage 0 if $help;

$ReadTable::verbose = $verbose;

@ARGV or die "Need to provide a search string\n";

$search_str = shift;
$search_str = "\\b$search_str\\b" if $whole_word;

@tab_files = @ARGV or 
  die "Need to specify an input table\n";

sub do_search {
  my (@fields) = @_;
  @fields = map { $_ || "" } @fields;
  my $str = join(" ",@fields);
  if($str =~ /$search_str/i) {
    print "$tab_fn: $curr_line\n";
  }
}

sub card {
  my ($arabic,$artransl,$english,$foot,$notes,$pdict) = @_;
  return do_search($arabic) if $foreign_only;
  return do_search($notes) if $notes_only;
  return do_search($arabic, $english, $foot);
}

read_vocab_table(\&card, \@tab_files);
